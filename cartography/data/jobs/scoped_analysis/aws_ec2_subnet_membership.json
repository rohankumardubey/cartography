{
  "statements": [
    {
      "query": "MATCH (:AWSAccount{id: $AWS_ID})-[:RESOURCE]->(i:EC2Instance)-[:NETWORK_INTERFACE]-(:NetworkInterface)-[:PART_OF_SUBNET]-(s:EC2Subnet) MERGE (i)-[r:PART_OF_SUBNET]->(s) ON CREATE SET r.firstseen = timestamp() SET r.lastupdated = $UPDATE_TAG",
      "iterative": true,
      "iterationsize": 100,
      "__comment__": "Create (:EC2Instance)-[:PART_OF_SUBNET]->(:EC2Subnet) if (:EC2Instance)--(:NetworkInterface)--(:EC2Subnet)"
    },
    {
      "query": "MATCH (:AWSAccount{id: $AWS_ID})-[:RESOURCE]->(:EC2Instance)-[r:PART_OF_SUBNET]-(:EC2Subnet) WHERE r.lastupdated <> $UPDATE_TAG WITH r LIMIT $LIMIT_SIZE DELETE r",
      "iterative": true,
      "iterationsize": 100
    },
    {
      "query": "MATCH (:AWSAccount{id: $AWS_ID})-[:RESOURCE]->(i:LoadBalancerV2)-[:NETWORK_INTERFACE]-(:NetworkInterface)-[:PART_OF_SUBNET]-(s:EC2Subnet) MERGE (i)-[r:PART_OF_SUBNET]->(s) ON CREATE SET r.firstseen = timestamp() SET r.lastupdated = $UPDATE_TAG",
      "iterative": true,
      "iterationsize": 100,
      "__comment__": "Creates (:LoadBalancerV2)-[:PART_OF_SUBNET]->(:EC2Subnet) if (:LoadBalancerV2)--(:NetworkInterface)--(:EC2Subnet)."
    },
    {
      "query": "MATCH (:AWSAccount{id: $AWS_ID})-[:RESOURCE]->(:LoadBalancerV2)-[r:PART_OF_SUBNET]-(:EC2Subnet) WHERE r.lastupdated <> $UPDATE_TAG WITH r LIMIT $LIMIT_SIZE DELETE r",
      "iterative": true,
      "iterationsize": 100
    },
    {
      "query": "MATCH (:AWSAccount{id: $AWS_ID})-[:RESOURCE]->(i:LoadBalancer)-[:NETWORK_INTERFACE]-(:NetworkInterface)-[:PART_OF_SUBNET]-(s:EC2Subnet) MERGE (i)-[r:PART_OF_SUBNET]->(s) ON CREATE SET r.firstseen = timestamp() SET r.lastupdated = $UPDATE_TAG",
      "iterative": true,
      "iterationsize": 100,
      "__comment__": "Creates (:LoadBalancer)-[:PART_OF_SUBNET]->(:EC2Subnet) if (:LoadBalancer)--(:NetworkInterface)--(:EC2Subnet)."
    },
    {
      "query": "MATCH (:AWSAccount{id: $AWS_ID})-[:RESOURCE]->(:LoadBalancer)-[r:PART_OF_SUBNET]-(:EC2Subnet) WHERE r.lastupdated <> $UPDATE_TAG WITH r LIMIT $LIMIT_SIZE DELETE r",
      "iterative": true,
      "iterationsize": 100
    }
  ],
  "name": "subnet membership"
}
